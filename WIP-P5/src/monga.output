Terminals unused in grammar

   TK_NUM_CHAR


Grammar

    0 $accept: program $end

    1 program: declarationChain

    2 primitiveType: TK_CHAR
    3              | TK_INT
    4              | TK_FLOAT

    5 type: primitiveType
    6     | type '[' ']'

    7 idList: TK_ID
    8       | idList ',' TK_ID

    9 variableDeclaration: type idList ';'

   10 variableDeclarationChain: variableDeclarationChain variableDeclaration
   11                         | %empty

   12 variable: TK_ID
   13         | expBase '[' expLogic ']'

   14 expBase: TK_NUM_INT
   15        | TK_NUM_FLOAT
   16        | TK_STRING
   17        | variable
   18        | '(' expLogic ')'
   19        | cmdCall
   20        | TK_NEW type '[' expLogic ']'

   21 expUnary: expBase
   22         | '-' expBase
   23         | '!' expBase

   24 expMultOps: '*'
   25           | '/'

   26 expMult: expUnary
   27        | expMult expMultOps expUnary

   28 expAddOps: '+'
   29          | '-'

   30 expAdd: expMult
   31       | expAdd expAddOps expMult

   32 expCmpOps: TK_CE
   33          | TK_NE
   34          | TK_GE
   35          | TK_LE
   36          | '>'
   37          | '<'

   38 expCmp: expAdd
   39       | expCmp expCmpOps expAdd

   40 expAnd: expCmp
   41       | expAnd TK_AND expCmp

   42 expLogic: expAnd
   43         | expLogic TK_OR expAnd

   44 expressionList: expressionListNonEmpty
   45               | %empty

   46 expressionListNonEmpty: expLogic
   47                       | expressionListNonEmpty ',' expLogic

   48 cmdCall: TK_ID '(' expressionList ')'

   49 cmdReturn: TK_RETURN
   50          | TK_RETURN expLogic

   51 command: block
   52        | expLogic ';'
   53        | cmdReturn ';'
   54        | variable '=' expLogic ';'
   55        | TK_WHILE '(' expLogic ')' command
   56        | TK_IF '(' expLogic ')' command
   57        | TK_IF '(' expLogic ')' command TK_ELSE command

   58 commandChain: commandChain command
   59             | %empty

   60 block: '{' variableDeclarationChain commandChain '}'

   61 argument: type TK_ID

   62 argumentList: argumentListNonEmpty
   63             | %empty

   64 argumentListNonEmpty: argument
   65                     | argumentList ',' argument

   66 functionSignature: TK_ID '(' argumentList ')' block

   67 functionDeclaration: type functionSignature
   68                    | TK_VOID functionSignature

   69 declaration: variableDeclaration
   70            | functionDeclaration

   71 declarationChain: declarationChain declaration
   72                 | %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 23
'(' (40) 18 48 55 56 57 66
')' (41) 18 48 55 56 57 66
'*' (42) 24
'+' (43) 28
',' (44) 8 47 65
'-' (45) 22 29
'/' (47) 25
';' (59) 9 52 53 54
'<' (60) 37
'=' (61) 54
'>' (62) 36
'[' (91) 6 13 20
']' (93) 6 13 20
'{' (123) 60
'}' (125) 60
error (256)
TK_VOID (258) 68
TK_CHAR (259) 2
TK_INT (260) 3
TK_FLOAT (261) 4
TK_IF (262) 56 57
TK_ELSE (263) 57
TK_WHILE (264) 55
TK_NEW (265) 20
TK_RETURN (266) 49 50
TK_GE (267) 34
TK_LE (268) 35
TK_CE (269) 32
TK_NE (270) 33
TK_AND (271) 41
TK_OR (272) 43
TK_ID (273) 7 8 12 48 61 66
TK_NUM_CHAR (274)
TK_NUM_INT (275) 14
TK_NUM_FLOAT (276) 15
TK_STRING (277) 16
WO_ELSE (278)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
primitiveType (42)
    on left: 2 3 4, on right: 5
type (43)
    on left: 5 6, on right: 6 9 20 61 67
idList (44)
    on left: 7 8, on right: 8 9
variableDeclaration (45)
    on left: 9, on right: 10 69
variableDeclarationChain (46)
    on left: 10 11, on right: 10 60
variable (47)
    on left: 12 13, on right: 17 54
expBase (48)
    on left: 14 15 16 17 18 19 20, on right: 13 21 22 23
expUnary (49)
    on left: 21 22 23, on right: 26 27
expMultOps (50)
    on left: 24 25, on right: 27
expMult (51)
    on left: 26 27, on right: 27 30 31
expAddOps (52)
    on left: 28 29, on right: 31
expAdd (53)
    on left: 30 31, on right: 31 38 39
expCmpOps (54)
    on left: 32 33 34 35 36 37, on right: 39
expCmp (55)
    on left: 38 39, on right: 39 40 41
expAnd (56)
    on left: 40 41, on right: 41 42 43
expLogic (57)
    on left: 42 43, on right: 13 18 20 43 46 47 50 52 54 55 56 57
expressionList (58)
    on left: 44 45, on right: 48
expressionListNonEmpty (59)
    on left: 46 47, on right: 44 47
cmdCall (60)
    on left: 48, on right: 19
cmdReturn (61)
    on left: 49 50, on right: 53
command (62)
    on left: 51 52 53 54 55 56 57, on right: 55 56 57 58
commandChain (63)
    on left: 58 59, on right: 58 60
block (64)
    on left: 60, on right: 51 66
argument (65)
    on left: 61, on right: 64 65
argumentList (66)
    on left: 62 63, on right: 65 66
argumentListNonEmpty (67)
    on left: 64 65, on right: 62
functionSignature (68)
    on left: 66, on right: 67 68
functionDeclaration (69)
    on left: 67 68, on right: 70
declaration (70)
    on left: 69 70, on right: 71
declarationChain (71)
    on left: 71 72, on right: 1 71


State 0

    0 $accept: . program $end

    $default  reduce using rule 72 (declarationChain)

    program           go to state 1
    declarationChain  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declarationChain .
   71 declarationChain: declarationChain . declaration

    TK_VOID   shift, and go to state 4
    TK_CHAR   shift, and go to state 5
    TK_INT    shift, and go to state 6
    TK_FLOAT  shift, and go to state 7

    $default  reduce using rule 1 (program)

    primitiveType        go to state 8
    type                 go to state 9
    variableDeclaration  go to state 10
    functionDeclaration  go to state 11
    declaration          go to state 12


State 3

    0 $accept: program $end .

    $default  accept


State 4

   68 functionDeclaration: TK_VOID . functionSignature

    TK_ID  shift, and go to state 13

    functionSignature  go to state 14


State 5

    2 primitiveType: TK_CHAR .

    $default  reduce using rule 2 (primitiveType)


State 6

    3 primitiveType: TK_INT .

    $default  reduce using rule 3 (primitiveType)


State 7

    4 primitiveType: TK_FLOAT .

    $default  reduce using rule 4 (primitiveType)


State 8

    5 type: primitiveType .

    $default  reduce using rule 5 (type)


State 9

    6 type: type . '[' ']'
    9 variableDeclaration: type . idList ';'
   67 functionDeclaration: type . functionSignature

    TK_ID  shift, and go to state 15
    '['    shift, and go to state 16

    idList             go to state 17
    functionSignature  go to state 18


State 10

   69 declaration: variableDeclaration .

    $default  reduce using rule 69 (declaration)


State 11

   70 declaration: functionDeclaration .

    $default  reduce using rule 70 (declaration)


State 12

   71 declarationChain: declarationChain declaration .

    $default  reduce using rule 71 (declarationChain)


State 13

   66 functionSignature: TK_ID . '(' argumentList ')' block

    '('  shift, and go to state 19


State 14

   68 functionDeclaration: TK_VOID functionSignature .

    $default  reduce using rule 68 (functionDeclaration)


State 15

    7 idList: TK_ID .
   66 functionSignature: TK_ID . '(' argumentList ')' block

    '('  shift, and go to state 19

    $default  reduce using rule 7 (idList)


State 16

    6 type: type '[' . ']'

    ']'  shift, and go to state 20


State 17

    8 idList: idList . ',' TK_ID
    9 variableDeclaration: type idList . ';'

    ','  shift, and go to state 21
    ';'  shift, and go to state 22


State 18

   67 functionDeclaration: type functionSignature .

    $default  reduce using rule 67 (functionDeclaration)


State 19

   66 functionSignature: TK_ID '(' . argumentList ')' block

    TK_CHAR   shift, and go to state 5
    TK_INT    shift, and go to state 6
    TK_FLOAT  shift, and go to state 7

    $default  reduce using rule 63 (argumentList)

    primitiveType         go to state 8
    type                  go to state 23
    argument              go to state 24
    argumentList          go to state 25
    argumentListNonEmpty  go to state 26


State 20

    6 type: type '[' ']' .

    $default  reduce using rule 6 (type)


State 21

    8 idList: idList ',' . TK_ID

    TK_ID  shift, and go to state 27


State 22

    9 variableDeclaration: type idList ';' .

    $default  reduce using rule 9 (variableDeclaration)


State 23

    6 type: type . '[' ']'
   61 argument: type . TK_ID

    TK_ID  shift, and go to state 28
    '['    shift, and go to state 16


State 24

   64 argumentListNonEmpty: argument .

    $default  reduce using rule 64 (argumentListNonEmpty)


State 25

   65 argumentListNonEmpty: argumentList . ',' argument
   66 functionSignature: TK_ID '(' argumentList . ')' block

    ','  shift, and go to state 29
    ')'  shift, and go to state 30


State 26

   62 argumentList: argumentListNonEmpty .

    $default  reduce using rule 62 (argumentList)


State 27

    8 idList: idList ',' TK_ID .

    $default  reduce using rule 8 (idList)


State 28

   61 argument: type TK_ID .

    $default  reduce using rule 61 (argument)


State 29

   65 argumentListNonEmpty: argumentList ',' . argument

    TK_CHAR   shift, and go to state 5
    TK_INT    shift, and go to state 6
    TK_FLOAT  shift, and go to state 7

    primitiveType  go to state 8
    type           go to state 23
    argument       go to state 31


State 30

   66 functionSignature: TK_ID '(' argumentList ')' . block

    '{'  shift, and go to state 32

    block  go to state 33


State 31

   65 argumentListNonEmpty: argumentList ',' argument .

    $default  reduce using rule 65 (argumentListNonEmpty)


State 32

   60 block: '{' . variableDeclarationChain commandChain '}'

    $default  reduce using rule 11 (variableDeclarationChain)

    variableDeclarationChain  go to state 34


State 33

   66 functionSignature: TK_ID '(' argumentList ')' block .

    $default  reduce using rule 66 (functionSignature)


State 34

   10 variableDeclarationChain: variableDeclarationChain . variableDeclaration
   60 block: '{' variableDeclarationChain . commandChain '}'

    TK_CHAR   shift, and go to state 5
    TK_INT    shift, and go to state 6
    TK_FLOAT  shift, and go to state 7

    $default  reduce using rule 59 (commandChain)

    primitiveType        go to state 8
    type                 go to state 35
    variableDeclaration  go to state 36
    commandChain         go to state 37


State 35

    6 type: type . '[' ']'
    9 variableDeclaration: type . idList ';'

    TK_ID  shift, and go to state 38
    '['    shift, and go to state 16

    idList  go to state 17


State 36

   10 variableDeclarationChain: variableDeclarationChain variableDeclaration .

    $default  reduce using rule 10 (variableDeclarationChain)


State 37

   58 commandChain: commandChain . command
   60 block: '{' variableDeclarationChain commandChain . '}'

    TK_IF         shift, and go to state 39
    TK_WHILE      shift, and go to state 40
    TK_NEW        shift, and go to state 41
    TK_RETURN     shift, and go to state 42
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49
    '{'           shift, and go to state 32
    '}'           shift, and go to state 50

    variable   go to state 51
    expBase    go to state 52
    expUnary   go to state 53
    expMult    go to state 54
    expAdd     go to state 55
    expCmp     go to state 56
    expAnd     go to state 57
    expLogic   go to state 58
    cmdCall    go to state 59
    cmdReturn  go to state 60
    command    go to state 61
    block      go to state 62


State 38

    7 idList: TK_ID .

    $default  reduce using rule 7 (idList)


State 39

   56 command: TK_IF . '(' expLogic ')' command
   57        | TK_IF . '(' expLogic ')' command TK_ELSE command

    '('  shift, and go to state 63


State 40

   55 command: TK_WHILE . '(' expLogic ')' command

    '('  shift, and go to state 64


State 41

   20 expBase: TK_NEW . type '[' expLogic ']'

    TK_CHAR   shift, and go to state 5
    TK_INT    shift, and go to state 6
    TK_FLOAT  shift, and go to state 7

    primitiveType  go to state 8
    type           go to state 65


State 42

   49 cmdReturn: TK_RETURN .
   50          | TK_RETURN . expLogic

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    $default  reduce using rule 49 (cmdReturn)

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 67
    cmdCall   go to state 59


State 43

   12 variable: TK_ID .
   48 cmdCall: TK_ID . '(' expressionList ')'

    '('  shift, and go to state 68

    $default  reduce using rule 12 (variable)


State 44

   14 expBase: TK_NUM_INT .

    $default  reduce using rule 14 (expBase)


State 45

   15 expBase: TK_NUM_FLOAT .

    $default  reduce using rule 15 (expBase)


State 46

   16 expBase: TK_STRING .

    $default  reduce using rule 16 (expBase)


State 47

   18 expBase: '(' . expLogic ')'

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 69
    cmdCall   go to state 59


State 48

   22 expUnary: '-' . expBase

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47

    variable  go to state 66
    expBase   go to state 70
    cmdCall   go to state 59


State 49

   23 expUnary: '!' . expBase

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47

    variable  go to state 66
    expBase   go to state 71
    cmdCall   go to state 59


State 50

   60 block: '{' variableDeclarationChain commandChain '}' .

    $default  reduce using rule 60 (block)


State 51

   17 expBase: variable .
   54 command: variable . '=' expLogic ';'

    '='  shift, and go to state 72

    $default  reduce using rule 17 (expBase)


State 52

   13 variable: expBase . '[' expLogic ']'
   21 expUnary: expBase .

    '['  shift, and go to state 73

    $default  reduce using rule 21 (expUnary)


State 53

   26 expMult: expUnary .

    $default  reduce using rule 26 (expMult)


State 54

   27 expMult: expMult . expMultOps expUnary
   30 expAdd: expMult .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 30 (expAdd)

    expMultOps  go to state 76


State 55

   31 expAdd: expAdd . expAddOps expMult
   38 expCmp: expAdd .

    '-'  shift, and go to state 77
    '+'  shift, and go to state 78

    $default  reduce using rule 38 (expCmp)

    expAddOps  go to state 79


State 56

   39 expCmp: expCmp . expCmpOps expAdd
   40 expAnd: expCmp .

    TK_GE  shift, and go to state 80
    TK_LE  shift, and go to state 81
    TK_CE  shift, and go to state 82
    TK_NE  shift, and go to state 83
    '>'    shift, and go to state 84
    '<'    shift, and go to state 85

    $default  reduce using rule 40 (expAnd)

    expCmpOps  go to state 86


State 57

   41 expAnd: expAnd . TK_AND expCmp
   42 expLogic: expAnd .

    TK_AND  shift, and go to state 87

    $default  reduce using rule 42 (expLogic)


State 58

   43 expLogic: expLogic . TK_OR expAnd
   52 command: expLogic . ';'

    TK_OR  shift, and go to state 88
    ';'    shift, and go to state 89


State 59

   19 expBase: cmdCall .

    $default  reduce using rule 19 (expBase)


State 60

   53 command: cmdReturn . ';'

    ';'  shift, and go to state 90


State 61

   58 commandChain: commandChain command .

    $default  reduce using rule 58 (commandChain)


State 62

   51 command: block .

    $default  reduce using rule 51 (command)


State 63

   56 command: TK_IF '(' . expLogic ')' command
   57        | TK_IF '(' . expLogic ')' command TK_ELSE command

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 91
    cmdCall   go to state 59


State 64

   55 command: TK_WHILE '(' . expLogic ')' command

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 92
    cmdCall   go to state 59


State 65

    6 type: type . '[' ']'
   20 expBase: TK_NEW type . '[' expLogic ']'

    '['  shift, and go to state 93


State 66

   17 expBase: variable .

    $default  reduce using rule 17 (expBase)


State 67

   43 expLogic: expLogic . TK_OR expAnd
   50 cmdReturn: TK_RETURN expLogic .

    TK_OR  shift, and go to state 88

    $default  reduce using rule 50 (cmdReturn)


State 68

   48 cmdCall: TK_ID '(' . expressionList ')'

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    $default  reduce using rule 45 (expressionList)

    variable                go to state 66
    expBase                 go to state 52
    expUnary                go to state 53
    expMult                 go to state 54
    expAdd                  go to state 55
    expCmp                  go to state 56
    expAnd                  go to state 57
    expLogic                go to state 94
    expressionList          go to state 95
    expressionListNonEmpty  go to state 96
    cmdCall                 go to state 59


State 69

   18 expBase: '(' expLogic . ')'
   43 expLogic: expLogic . TK_OR expAnd

    TK_OR  shift, and go to state 88
    ')'    shift, and go to state 97


State 70

   13 variable: expBase . '[' expLogic ']'
   22 expUnary: '-' expBase .

    '['  shift, and go to state 73

    $default  reduce using rule 22 (expUnary)


State 71

   13 variable: expBase . '[' expLogic ']'
   23 expUnary: '!' expBase .

    '['  shift, and go to state 73

    $default  reduce using rule 23 (expUnary)


State 72

   54 command: variable '=' . expLogic ';'

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 98
    cmdCall   go to state 59


State 73

   13 variable: expBase '[' . expLogic ']'

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 99
    cmdCall   go to state 59


State 74

   24 expMultOps: '*' .

    $default  reduce using rule 24 (expMultOps)


State 75

   25 expMultOps: '/' .

    $default  reduce using rule 25 (expMultOps)


State 76

   27 expMult: expMult expMultOps . expUnary

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 100
    cmdCall   go to state 59


State 77

   29 expAddOps: '-' .

    $default  reduce using rule 29 (expAddOps)


State 78

   28 expAddOps: '+' .

    $default  reduce using rule 28 (expAddOps)


State 79

   31 expAdd: expAdd expAddOps . expMult

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 101
    cmdCall   go to state 59


State 80

   34 expCmpOps: TK_GE .

    $default  reduce using rule 34 (expCmpOps)


State 81

   35 expCmpOps: TK_LE .

    $default  reduce using rule 35 (expCmpOps)


State 82

   32 expCmpOps: TK_CE .

    $default  reduce using rule 32 (expCmpOps)


State 83

   33 expCmpOps: TK_NE .

    $default  reduce using rule 33 (expCmpOps)


State 84

   36 expCmpOps: '>' .

    $default  reduce using rule 36 (expCmpOps)


State 85

   37 expCmpOps: '<' .

    $default  reduce using rule 37 (expCmpOps)


State 86

   39 expCmp: expCmp expCmpOps . expAdd

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 102
    cmdCall   go to state 59


State 87

   41 expAnd: expAnd TK_AND . expCmp

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 103
    cmdCall   go to state 59


State 88

   43 expLogic: expLogic TK_OR . expAnd

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 104
    cmdCall   go to state 59


State 89

   52 command: expLogic ';' .

    $default  reduce using rule 52 (command)


State 90

   53 command: cmdReturn ';' .

    $default  reduce using rule 53 (command)


State 91

   43 expLogic: expLogic . TK_OR expAnd
   56 command: TK_IF '(' expLogic . ')' command
   57        | TK_IF '(' expLogic . ')' command TK_ELSE command

    TK_OR  shift, and go to state 88
    ')'    shift, and go to state 105


State 92

   43 expLogic: expLogic . TK_OR expAnd
   55 command: TK_WHILE '(' expLogic . ')' command

    TK_OR  shift, and go to state 88
    ')'    shift, and go to state 106


State 93

    6 type: type '[' . ']'
   20 expBase: TK_NEW type '[' . expLogic ']'

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    ']'           shift, and go to state 20
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 107
    cmdCall   go to state 59


State 94

   43 expLogic: expLogic . TK_OR expAnd
   46 expressionListNonEmpty: expLogic .

    TK_OR  shift, and go to state 88

    $default  reduce using rule 46 (expressionListNonEmpty)


State 95

   48 cmdCall: TK_ID '(' expressionList . ')'

    ')'  shift, and go to state 108


State 96

   44 expressionList: expressionListNonEmpty .
   47 expressionListNonEmpty: expressionListNonEmpty . ',' expLogic

    ','  shift, and go to state 109

    $default  reduce using rule 44 (expressionList)


State 97

   18 expBase: '(' expLogic ')' .

    $default  reduce using rule 18 (expBase)


State 98

   43 expLogic: expLogic . TK_OR expAnd
   54 command: variable '=' expLogic . ';'

    TK_OR  shift, and go to state 88
    ';'    shift, and go to state 110


State 99

   13 variable: expBase '[' expLogic . ']'
   43 expLogic: expLogic . TK_OR expAnd

    TK_OR  shift, and go to state 88
    ']'    shift, and go to state 111


State 100

   27 expMult: expMult expMultOps expUnary .

    $default  reduce using rule 27 (expMult)


State 101

   27 expMult: expMult . expMultOps expUnary
   31 expAdd: expAdd expAddOps expMult .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 31 (expAdd)

    expMultOps  go to state 76


State 102

   31 expAdd: expAdd . expAddOps expMult
   39 expCmp: expCmp expCmpOps expAdd .

    '-'  shift, and go to state 77
    '+'  shift, and go to state 78

    $default  reduce using rule 39 (expCmp)

    expAddOps  go to state 79


State 103

   39 expCmp: expCmp . expCmpOps expAdd
   41 expAnd: expAnd TK_AND expCmp .

    TK_GE  shift, and go to state 80
    TK_LE  shift, and go to state 81
    TK_CE  shift, and go to state 82
    TK_NE  shift, and go to state 83
    '>'    shift, and go to state 84
    '<'    shift, and go to state 85

    $default  reduce using rule 41 (expAnd)

    expCmpOps  go to state 86


State 104

   41 expAnd: expAnd . TK_AND expCmp
   43 expLogic: expLogic TK_OR expAnd .

    TK_AND  shift, and go to state 87

    $default  reduce using rule 43 (expLogic)


State 105

   56 command: TK_IF '(' expLogic ')' . command
   57        | TK_IF '(' expLogic ')' . command TK_ELSE command

    TK_IF         shift, and go to state 39
    TK_WHILE      shift, and go to state 40
    TK_NEW        shift, and go to state 41
    TK_RETURN     shift, and go to state 42
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49
    '{'           shift, and go to state 32

    variable   go to state 51
    expBase    go to state 52
    expUnary   go to state 53
    expMult    go to state 54
    expAdd     go to state 55
    expCmp     go to state 56
    expAnd     go to state 57
    expLogic   go to state 58
    cmdCall    go to state 59
    cmdReturn  go to state 60
    command    go to state 112
    block      go to state 62


State 106

   55 command: TK_WHILE '(' expLogic ')' . command

    TK_IF         shift, and go to state 39
    TK_WHILE      shift, and go to state 40
    TK_NEW        shift, and go to state 41
    TK_RETURN     shift, and go to state 42
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49
    '{'           shift, and go to state 32

    variable   go to state 51
    expBase    go to state 52
    expUnary   go to state 53
    expMult    go to state 54
    expAdd     go to state 55
    expCmp     go to state 56
    expAnd     go to state 57
    expLogic   go to state 58
    cmdCall    go to state 59
    cmdReturn  go to state 60
    command    go to state 113
    block      go to state 62


State 107

   20 expBase: TK_NEW type '[' expLogic . ']'
   43 expLogic: expLogic . TK_OR expAnd

    TK_OR  shift, and go to state 88
    ']'    shift, and go to state 114


State 108

   48 cmdCall: TK_ID '(' expressionList ')' .

    $default  reduce using rule 48 (cmdCall)


State 109

   47 expressionListNonEmpty: expressionListNonEmpty ',' . expLogic

    TK_NEW        shift, and go to state 41
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49

    variable  go to state 66
    expBase   go to state 52
    expUnary  go to state 53
    expMult   go to state 54
    expAdd    go to state 55
    expCmp    go to state 56
    expAnd    go to state 57
    expLogic  go to state 115
    cmdCall   go to state 59


State 110

   54 command: variable '=' expLogic ';' .

    $default  reduce using rule 54 (command)


State 111

   13 variable: expBase '[' expLogic ']' .

    $default  reduce using rule 13 (variable)


State 112

   56 command: TK_IF '(' expLogic ')' command .
   57        | TK_IF '(' expLogic ')' command . TK_ELSE command

    TK_ELSE  shift, and go to state 116

    $default  reduce using rule 56 (command)


State 113

   55 command: TK_WHILE '(' expLogic ')' command .

    $default  reduce using rule 55 (command)


State 114

   20 expBase: TK_NEW type '[' expLogic ']' .

    $default  reduce using rule 20 (expBase)


State 115

   43 expLogic: expLogic . TK_OR expAnd
   47 expressionListNonEmpty: expressionListNonEmpty ',' expLogic .

    TK_OR  shift, and go to state 88

    $default  reduce using rule 47 (expressionListNonEmpty)


State 116

   57 command: TK_IF '(' expLogic ')' command TK_ELSE . command

    TK_IF         shift, and go to state 39
    TK_WHILE      shift, and go to state 40
    TK_NEW        shift, and go to state 41
    TK_RETURN     shift, and go to state 42
    TK_ID         shift, and go to state 43
    TK_NUM_INT    shift, and go to state 44
    TK_NUM_FLOAT  shift, and go to state 45
    TK_STRING     shift, and go to state 46
    '('           shift, and go to state 47
    '-'           shift, and go to state 48
    '!'           shift, and go to state 49
    '{'           shift, and go to state 32

    variable   go to state 51
    expBase    go to state 52
    expUnary   go to state 53
    expMult    go to state 54
    expAdd     go to state 55
    expCmp     go to state 56
    expAnd     go to state 57
    expLogic   go to state 58
    cmdCall    go to state 59
    cmdReturn  go to state 60
    command    go to state 117
    block      go to state 62


State 117

   57 command: TK_IF '(' expLogic ')' command TK_ELSE command .

    $default  reduce using rule 57 (command)
